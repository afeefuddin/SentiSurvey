// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid())
  name         String
  emailId      String  @unique
  password     String?
  refreshToken String?
  photo        String?
  Poll         Poll[]
  Survey Survey[]
}

model Poll {
  id             String         @id @default(uuid())
  totalQuestions Int
  questions      PollQuestion[]
  timer          Int
  author         User           @relation(fields: [userId], references: [id])
  userId         String
  time DateTime @default(now())
  finished Boolean @default(false)
  roomid String?
}

model PollQuestion {
  id       String   @id @default(uuid())
  question String
  option   Options? @relation("options")
  poll     Poll     @relation(fields: [pollId], references: [id])
  pollId   String
}

model Options {
  id            String       @id @default(uuid())
  a             String
  b             String
  c             String
  d             String
  correctOption Correct
  question      PollQuestion @relation("options", fields: [questionId], references: [id])
  questionId    String       @unique
}

model Survey {
  id String @id @default(uuid())
  totalQuestions Int
  questions  SurveyQuestion[]
  author         User           @relation(fields: [userId], references: [id])
  userId         String
  totalParticipants Int @default(0)
  public Boolean @default(false)
  name String
  description String
}
model SurveyQuestion {
  id String @id @default(uuid())
  question String 
  survey Survey @relation(fields: [surveyId],references: [id])
  surveyId String
  answers Int[]
}

enum Correct {
  a
  b
  c
  d
}
